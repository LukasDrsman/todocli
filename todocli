#!/usr/bin/python3
from functions import *
from time import sleep

# init
if(os.path.isfile(path) != True):
    notes = open(path, "w")
    notes.close()
todolist, title = load(path)
show(todolist, title)

# main loop
while(1):
    usrInput = input(promptcol+prompt+END)
    if(" " in usrInput):
        command, parameter = usrInput.split(' ', 1)
    else:
        command = usrInput
        parameter = ""

    if(command == "new" or command == "n"):
        new(todolist, parameter)

    elif(command == "write" or command == "w"):
        save(todolist, path)
        todolist, title = load(path)

    elif(command == "remove" or command == "rm"):
        remove(todolist, parameter)

    elif(command == "quit" or command == "q" or command == "exit" or command == "x"):
        if(writeonexit == True):
            save(todolist, path)
        print("\033c", end="")
        exit()

    elif(command == "clear" or command == "cl"):
        clear(todolist)

    elif(command == "load" or command == "l"):
        if(writeonexit == True):
            save(todolist, path)
        if(listtodos == True):
            todos = os.listdir(ddir)
            for i in range(len(todos)):
                print(" "+"["+str(i)+"]"+" "+(todos[i].split("."))[0])
        selection = input("number or name "+promptcol+prompt+END)
        try:
            selection = int(selection)
            try:
                path = ddir+todos[selection]
                todolist, title = load(path)
            except:
                todolist, title = load(path)
        except:
            path = ddir+selection+".todolist"
            if(os.path.isfile(path) != True):
                notes = open(path, "w")
                notes.close()
            todolist, title = load(path)

    elif(command == "date" or command == "d"):
        change_date(todolist, parameter)

    elif(command == "sort" or command == "s"):
        try:
            sort_type, direction = parameter.split(" ", 1)
        except:
            sort_type = parameter
            direction = "h"
        sort_by(todolist, sort_type, direction)

    else:
        change_flag(todolist, command, parameter)

    show(todolist, title)
